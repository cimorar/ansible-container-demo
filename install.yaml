---
- name: Set accounts
  hosts: ~containerservice-adalab
  vars:
      uusername: "{{ ansible_ssh_user }}"
  become: true
  tasks:
      - name: Set {{ uusername }} password
        user:
            name: "{{ uusername }}"
            password: "{{ ansible_az_group | password_hash('sha512') }}"

      - name: Set {{ item }} password
        user:
            name: "{{ item }}"
            password: "{{ item | password_hash('sha512') }}"
            shell: "/bin/bash"
            append: yes
            groups: docker
            update_password: on_create
        with_sequence: start=0 end=50 format=adauser%02d

      - name: Set {{ item }} kubectl
        shell: "cp -fra /home/{{ uusername }}/.kube /home/{{ item }}/ && chown {{ item }}:{{ item }} /home/{{ item }}/.kube -R"
        with_sequence: start=0 end=50 format=adauser%02d

      - name: Set {{ item }} namespace
        shell: "kubectl config set-context $(kubectl config current-context) --namespace={{ item }} && kubectl create namespace {{ item }}"
        become_user: "{{ item }}"
        ignore_errors: yes
        with_sequence: start=0 end=50 format=adauser%02d

#      - name: Set {{ item }} project alias
#        lineinfile:
#            dest: "/home/{{ item }}/.bash_aliases"
#            line: "export COMPOSE_PROJECT_NAME=$USER"
#        become_user: "{{ item }}"
#        with_sequence: start=0 end=50 format=adauser%02d

      - name: Allow login with passwords
        lineinfile:
            dest: /etc/ssh/sshd_config
            regexp: '^PasswordAuthentication'
            line: 'PasswordAuthentication yes'
        notify: Restart sshd
        tags: ansible

#      - name: Allow login on https port
#        lineinfile:
#            dest: /etc/ssh/sshd_config
#            regexp: "^(#\\s+|)Port "
#            insertafter: "^(#\\s+|)Port "
#            line: "Port 22\nPort 443"
#        notify: Restart sshd
#        tags: ansible
#
#      - name: Change port in kube-apiserver
#        lineinfile:
#            dest: /etc/kubernetes/manifests/kube-apiserver.yaml
#            regexp: '        - "--secure-port=443"'
#            line: '        - "--secure-port=8443"'
#        notify: Restart kubelet
#        tags: ansible

  handlers:
      - name: Restart kubelet
        service:
            name: kubelet
            state: restarted

      - name: Restart sshd
        service:
            name: sshd
            state: restarted

- name: Install Ansible on ACS Master Nodes
  hosts: ~containerservice-adalab
  become: true
  vars:
      ansible_packages: ansible
      python_packages:
          - python-pip
          - python-dev
          - build-essential
  tasks:
      - name: Install Ansible PPA key
        apt_key:
            id: 6125E2A8C77F2818FB7BD15B93C4A3FD7BB9C367
            keyserver: keyserver.ubuntu.com
            state: present
        tags: ansible

      - name: Install Ansible PPA
        apt_repository:
            repo: 'ppa:ansible/ansible'
            state: present
        tags: ansible

      - name: Install Ansible packages
        apt:
            name: "{{ item }}"
            state: present
            update_cache: yes
        with_items: "{{ ansible_packages }}"
        tags: ansible

- name: Install ansible-container
  hosts: ~containerservice-adalab
  become: true
  vars:
      bleeding_edge: False
  tasks:
      - name: Downloads get-pip.py
        get_url:
          url: https://bootstrap.pypa.io/get-pip.py
          dest: /tmp/get-pip.py
        tags: ansible

      - name: Installs pip
        command: python /tmp/get-pip.py creates=/bin/pip2
        tags: ansible

      - name: Upgrade setuptools
        pip: name=setuptools state=latest
        tags: ansible

      - name: Get openshift-restclient-python
        git:
            repo: "https://github.com/openshift/openshift-restclient-python.git"
            dest: /var/tmp/openshift-restclient-python
            force: yes
        tags: ansible

      - name: Fix openshift-restclient-python version string
        lineinfile:
            dest: /var/tmp/openshift-restclient-python/setup.py
            regexp: '^CLIENT_VERSION = '
            line: 'CLIENT_VERSION = "1.0.0"'
        tags: ansible

      - name: Install openshift-restclient-python
        pip:
            name: /var/tmp/openshift-restclient-python
        tags: ansible

      - name: Installs ansible-container 0.9.0.0
        pip: name=ansible-container
        tags: ansible
        when: bleeding_edge

      - name: Install ansible-container 0.9.0.0 kubernetes and docker support
        # BUG: pip breaks here, as it translates command to: ansible-container[docker k8s]
        command: pip install ansible-container[docker,k8s]
        tags: ansible
        when: bleeding_edge

      - name: Installs ansible-container 0.3.0
        pip: name=ansible-container==0.3.0
        tags: ansible
        when: not bleeding_edge

      - name: Install ansible-container wrapper
        blockinfile:
            dest: /usr/local/sbin/ansible-container
            owner: root
            group: root
            mode: 0755
            create: yes
            block: |
                #!/bin/bash
                
                while true ; do
                  if [ -f /tmp/aclock ] ; then
                    [ -z "$prog" ] && echo -n "Waiting for other instance ($(stat -c %U /tmp/aclock)) to finish build " && prog=1
                    [ ! -z "$prog" ] && echo -n "." && sleep 5
                  else
                    prog=''
                    echo -n "Getting ready to launch "
                    for i in $(seq 0 $((RANDOM%30))) ; do
                      echo -n "." && sleep 1
                    done
                    if [ ! -f /tmp/aclock ] ; then
                      touch /tmp/aclock
                      echo "We've got a lock!"
                      break
                    fi
                  fi
                done
                
                /usr/local/bin/ansible-container $*
                
                rm -f /tmp/aclock
        tags: ansible
        when: not bleeding_edge

- name: Install example repositories
  hosts: ~containerservice-adalab
  become: false
  tasks:
      - name: Install ansible-container-examples
        git:
            repo: "https://github.com/ansible/ansible-container-examples.git"
            dest: examples
        tags: examples

      - name: Install ansible-container-demo
        git:
            repo: "https://github.com/linuxpolska/ansible-container-demo.git"
            dest: slides
        tags: examples

- name: Install example repositories for all lab users
  hosts: ~containerservice-adalab
  vars:
      uusername: "{{ ansible_ssh_user }}"
  become: true
  tasks:
      - name: Install ansible-container-examples for {{ item }}
        shell: "cp -fra /home/{{ uusername }}/examples /home/{{ item }}/ && chown {{ item }}:{{ item }} /home/{{ item }}/examples -R"
        tags: examples
        with_sequence: start=0 end=50 format=adauser%02d

      - name: Install ansible-container-demo for {{ item }}
        shell: "cp -fra /home/{{ uusername }}/slides /home/{{ item }}/ && chown {{ item }}:{{ item }} /home/{{ item }}/slides -R"
        tags: examples
        with_sequence: start=0 end=50 format=adauser%02d

